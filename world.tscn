[gd_scene load_steps=11 format=3 uid="uid://bsto4mbtx8ty8"]

[ext_resource type="PackedScene" uid="uid://3hv1pq5uwpgx" path="res://Player/Player.tscn" id="1_kqxt0"]
[ext_resource type="Texture2D" uid="uid://dnafefp4y035j" path="res://sunny-land/assets/environment/tileset.png" id="1_q5xj7"]
[ext_resource type="Script" path="res://BG.gd" id="2_thxk0"]
[ext_resource type="Texture2D" uid="uid://ktt3kgc60sjk" path="res://sunny-land/assets/environment/back.png" id="3_8bsp1"]
[ext_resource type="PackedScene" uid="uid://dk4ebmhukv3cf" path="res://Frog.tscn" id="5_0wnwe"]
[ext_resource type="Script" path="res://HP.gd" id="6_ryyor"]
[ext_resource type="Script" path="res://Gold.gd" id="7_c5osq"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_p2lsb"]
texture = ExtResource("1_q5xj7")
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:1/0 = 0
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
3:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:1/0 = 0
5:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:1/0/physics_layer_0/angular_velocity = 0.0
5:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:1/0 = 0
7:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:1/0/physics_layer_0/angular_velocity = 0.0
7:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:1/0 = 0
9:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:1/0/physics_layer_0/angular_velocity = 0.0
10:1/0 = 0
10:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:1/0/physics_layer_0/angular_velocity = 0.0
11:1/0 = 0
11:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:1/0/physics_layer_0/angular_velocity = 0.0
13:1/0 = 0
13:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:1/0/physics_layer_0/angular_velocity = 0.0
14:1/0 = 0
14:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:1/0/physics_layer_0/angular_velocity = 0.0
16:1/0 = 0
16:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:1/0/physics_layer_0/angular_velocity = 0.0
17:1/0 = 0
17:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:1/0/physics_layer_0/angular_velocity = 0.0
19:1/0 = 0
19:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:1/0/physics_layer_0/angular_velocity = 0.0
20:1/0 = 0
20:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:1/0/physics_layer_0/angular_velocity = 0.0
22:1/0 = 0
22:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:1/0/physics_layer_0/angular_velocity = 0.0
23:1/0 = 0
23:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:1/0/physics_layer_0/angular_velocity = 0.0
13:2/0 = 0
13:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:2/0/physics_layer_0/angular_velocity = 0.0
14:2/0 = 0
14:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:2/0/physics_layer_0/angular_velocity = 0.0
16:2/0 = 0
16:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:2/0/physics_layer_0/angular_velocity = 0.0
17:2/0 = 0
17:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:2/0/physics_layer_0/angular_velocity = 0.0
19:2/0 = 0
19:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:2/0/physics_layer_0/angular_velocity = 0.0
20:2/0 = 0
20:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:2/0/physics_layer_0/angular_velocity = 0.0
22:2/0 = 0
22:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:2/0/physics_layer_0/angular_velocity = 0.0
23:2/0 = 0
23:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
23:2/0/physics_layer_0/angular_velocity = 0.0
1:3/0 = 0
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
1:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:3/0 = 0
3:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:3/0/physics_layer_0/angular_velocity = 0.0
5:3/0 = 0
5:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:3/0/physics_layer_0/angular_velocity = 0.0
5:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:3/0 = 0
7:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:3/0/physics_layer_0/angular_velocity = 0.0
7:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:3/0 = 0
8:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:3/0/physics_layer_0/angular_velocity = 0.0
10:3/0 = 0
10:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:3/0/physics_layer_0/angular_velocity = 0.0
11:3/0 = 0
11:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:3/0/physics_layer_0/angular_velocity = 0.0
14:4/0 = 0
14:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:4/0/physics_layer_0/angular_velocity = 0.0
16:4/0 = 0
16:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:4/0/physics_layer_0/angular_velocity = 0.0
20:4/0 = 0
20:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:4/0/physics_layer_0/angular_velocity = 0.0
22:4/0 = 0
22:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:4/0/physics_layer_0/angular_velocity = 0.0
1:5/0 = 0
1:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:5/0/physics_layer_0/angular_velocity = 0.0
1:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:5/0 = 0
3:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:5/0/physics_layer_0/angular_velocity = 0.0
3:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:5/0 = 0
5:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:5/0/physics_layer_0/angular_velocity = 0.0
5:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:5/0 = 0
7:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:5/0/physics_layer_0/angular_velocity = 0.0
7:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:5/0 = 0
8:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:5/0/physics_layer_0/angular_velocity = 0.0
9:5/0 = 0
9:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:5/0/physics_layer_0/angular_velocity = 0.0
14:5/0 = 0
14:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:5/0/physics_layer_0/angular_velocity = 0.0
16:5/0 = 0
16:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:5/0/physics_layer_0/angular_velocity = 0.0
20:5/0 = 0
20:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:5/0/physics_layer_0/angular_velocity = 0.0
22:5/0 = 0
22:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
22:5/0/physics_layer_0/angular_velocity = 0.0
1:7/0 = 0
1:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:7/0/physics_layer_0/angular_velocity = 0.0
3:7/0 = 0
3:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:7/0/physics_layer_0/angular_velocity = 0.0
5:7/0 = 0
5:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:7/0/physics_layer_0/angular_velocity = 0.0
5:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:7/0 = 0
7:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:7/0/physics_layer_0/angular_velocity = 0.0
7:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:7/0 = 0
9:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:7/0/physics_layer_0/angular_velocity = 0.0
11:7/0 = 0
11:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:7/0/physics_layer_0/angular_velocity = 0.0
15:7/0 = 0
15:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:7/0/physics_layer_0/angular_velocity = 0.0
15:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:7/0 = 0
17:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:7/0/physics_layer_0/angular_velocity = 0.0
17:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:7/0 = 0
19:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:7/0/physics_layer_0/angular_velocity = 0.0
19:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
15:9/0 = 0
15:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:9/0/physics_layer_0/angular_velocity = 0.0
15:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:9/0 = 0
17:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:9/0/physics_layer_0/angular_velocity = 0.0
19:9/0 = 0
19:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:9/0/physics_layer_0/angular_velocity = 0.0
19:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:10/0 = 0
1:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:10/0/physics_layer_0/angular_velocity = 0.0
2:10/0 = 0
2:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:10/0/physics_layer_0/angular_velocity = 0.0
2:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:10/0 = 0
4:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:10/0/physics_layer_0/angular_velocity = 0.0
4:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:10/0 = 0
5:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:10/0/physics_layer_0/angular_velocity = 0.0
7:10/0 = 0
7:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:10/0/physics_layer_0/angular_velocity = 0.0
10:10/0 = 0
10:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:10/0/physics_layer_0/angular_velocity = 0.0
11:10/0 = 0
11:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:10/0/physics_layer_0/angular_velocity = 0.0
2:11/0 = 0
2:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:11/0/physics_layer_0/angular_velocity = 0.0
4:11/0 = 0
4:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:11/0/physics_layer_0/angular_velocity = 0.0
15:11/0 = 0
15:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:11/0/physics_layer_0/angular_velocity = 0.0
15:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
17:11/0 = 0
17:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:11/0/physics_layer_0/angular_velocity = 0.0
17:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:11/0 = 0
19:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:11/0/physics_layer_0/angular_velocity = 0.0
19:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:13/0 = 0
7:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:13/0/physics_layer_0/angular_velocity = 0.0
9:13/0 = 0
9:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:13/0/physics_layer_0/angular_velocity = 0.0
9:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:13/0 = 0
11:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:13/0/physics_layer_0/angular_velocity = 0.0
11:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:13/0 = 0
13:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:13/0/physics_layer_0/angular_velocity = 0.0
13:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:14/0 = 0
7:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:14/0/physics_layer_0/angular_velocity = 0.0
9:14/0 = 0
9:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:14/0/physics_layer_0/angular_velocity = 0.0
11:14/0 = 0
11:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:14/0/physics_layer_0/angular_velocity = 0.0
15:14/0 = 0
15:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:14/0/physics_layer_0/angular_velocity = 0.0
17:14/0 = 0
17:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:14/0/physics_layer_0/angular_velocity = 0.0
17:14/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:14/0 = 0
19:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:14/0/physics_layer_0/angular_velocity = 0.0
1:15/0 = 0
1:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:15/0/physics_layer_0/angular_velocity = 0.0
2:15/0 = 0
2:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:15/0/physics_layer_0/angular_velocity = 0.0
2:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:15/0 = 0
4:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:15/0/physics_layer_0/angular_velocity = 0.0
4:15/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:15/0 = 0
5:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:15/0/physics_layer_0/angular_velocity = 0.0
9:15/0 = 0
9:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:15/0/physics_layer_0/angular_velocity = 0.0
2:16/0 = 0
2:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:16/0/physics_layer_0/angular_velocity = 0.0
2:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:16/0 = 0
4:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:16/0/physics_layer_0/angular_velocity = 0.0
4:16/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:16/0 = 0
11:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:16/0/physics_layer_0/angular_velocity = 0.0
14:16/0 = 0
14:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:16/0/physics_layer_0/angular_velocity = 0.0
15:16/0 = 0
15:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:16/0/physics_layer_0/angular_velocity = 0.0
17:16/0 = 0
17:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:16/0/physics_layer_0/angular_velocity = 0.0
18:16/0 = 0
18:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:16/0/physics_layer_0/angular_velocity = 0.0
19:16/0 = 0
19:16/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:16/0/physics_layer_0/angular_velocity = 0.0
1:17/0 = 0
1:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:17/0/physics_layer_0/angular_velocity = 0.0
2:17/0 = 0
2:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:17/0/physics_layer_0/angular_velocity = 0.0
2:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:17/0 = 0
4:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:17/0/physics_layer_0/angular_velocity = 0.0
4:17/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:17/0 = 0
5:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:17/0/physics_layer_0/angular_velocity = 0.0
11:17/0 = 0
11:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:17/0/physics_layer_0/angular_velocity = 0.0
14:17/0 = 0
14:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:17/0/physics_layer_0/angular_velocity = 0.0
15:17/0 = 0
15:17/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:17/0/physics_layer_0/angular_velocity = 0.0
1:18/0 = 0
1:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:18/0/physics_layer_0/angular_velocity = 0.0
1:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:18/0 = 0
2:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:18/0/physics_layer_0/angular_velocity = 0.0
4:18/0 = 0
4:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:18/0/physics_layer_0/angular_velocity = 0.0
5:18/0 = 0
5:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:18/0/physics_layer_0/angular_velocity = 0.0
5:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:18/0 = 0
10:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:18/0/physics_layer_0/angular_velocity = 0.0
11:18/0 = 0
11:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:18/0/physics_layer_0/angular_velocity = 0.0
12:18/0 = 0
12:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:18/0/physics_layer_0/angular_velocity = 0.0
14:18/0 = 0
14:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:18/0/physics_layer_0/angular_velocity = 0.0
15:18/0 = 0
15:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:18/0/physics_layer_0/angular_velocity = 0.0
17:18/0 = 0
17:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:18/0/physics_layer_0/angular_velocity = 0.0
17:18/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
19:18/0 = 0
19:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:18/0/physics_layer_0/angular_velocity = 0.0
21:18/0 = 0
21:18/0/physics_layer_0/linear_velocity = Vector2(0, 0)
21:18/0/physics_layer_0/angular_velocity = 0.0
1:20/0 = 0
1:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:20/0/physics_layer_0/angular_velocity = 0.0
1:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:20/0 = 0
3:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:20/0/physics_layer_0/angular_velocity = 0.0
3:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:20/0 = 0
4:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:20/0/physics_layer_0/angular_velocity = 0.0
4:20/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:20/0 = 0
9:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:20/0/physics_layer_0/angular_velocity = 0.0
10:20/0 = 0
10:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:20/0/physics_layer_0/angular_velocity = 0.0
11:20/0 = 0
11:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:20/0/physics_layer_0/angular_velocity = 0.0
13:20/0 = 0
13:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:20/0/physics_layer_0/angular_velocity = 0.0
14:20/0 = 0
14:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:20/0/physics_layer_0/angular_velocity = 0.0
15:20/0 = 0
15:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:20/0/physics_layer_0/angular_velocity = 0.0
17:20/0 = 0
17:20/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:20/0/physics_layer_0/angular_velocity = 0.0
3:21/0 = 0
3:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:21/0/physics_layer_0/angular_velocity = 0.0
3:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:21/0 = 0
4:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:21/0/physics_layer_0/angular_velocity = 0.0
4:21/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:21/0 = 0
9:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:21/0/physics_layer_0/angular_velocity = 0.0
10:21/0 = 0
10:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:21/0/physics_layer_0/angular_velocity = 0.0
11:21/0 = 0
11:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:21/0/physics_layer_0/angular_velocity = 0.0
13:21/0 = 0
13:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:21/0/physics_layer_0/angular_velocity = 0.0
14:21/0 = 0
14:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:21/0/physics_layer_0/angular_velocity = 0.0
15:21/0 = 0
15:21/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:21/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSet" id="TileSet_dn27a"]
physics_layer_0/collision_layer = 1
sources/0 = SubResource("TileSetAtlasSource_p2lsb")

[sub_resource type="GDScript" id="GDScript_r2dne"]
script/source = "extends Node2D

var Cherry = preload(\"res://Cherry.tscn\")

func _ready():
	spawn_cherry()

func _on_timer_timeout():
	spawn_cherry()

func spawn_cherry():
	var cherryTemp = Cherry.instantiate()
	var rng = RandomNumberGenerator.new()
	var randint = rng.randi_range(256, 1500)
	cherryTemp.position = Vector2(randint, 304)
	add_child(cherryTemp)
"

[node name="World" type="Node2D"]

[node name="TileMap" type="TileMap" parent="."]
tile_set = SubResource("TileSet_dn27a")
format = 2
layer_0/tile_data = PackedInt32Array(1572874, 65536, 3, 1638410, 65536, 3, 1703946, 65536, 3, 1769482, 65536, 3, 1835018, 65536, 3, 1900554, 65536, 3, 1966090, 65536, 3, 1572875, 65536, 3, 1638411, 65536, 3, 1703947, 65536, 3, 1769483, 65536, 3, 1835019, 65536, 3, 1900555, 65536, 3, 1966091, 65536, 3, 1572876, 65536, 3, 1638412, 65536, 3, 1703948, 65536, 3, 1769484, 65536, 3, 1835020, 65536, 3, 1900556, 65536, 3, 1966092, 65536, 3, 1572877, 65536, 3, 1638413, 65536, 3, 1703949, 65536, 3, 1769485, 65536, 3, 1835021, 65536, 3, 1900557, 65536, 3, 1966093, 65536, 3, 1572878, 65536, 3, 1638414, 65536, 3, 1703950, 65536, 3, 1769486, 65536, 3, 1835022, 65536, 3, 1900558, 65536, 3, 1966094, 65536, 3, 1572879, 65536, 3, 1638415, 65536, 3, 1703951, 65536, 3, 1769487, 65536, 3, 1835023, 65536, 3, 1900559, 65536, 3, 1966095, 65536, 3, 1572880, 65536, 3, 1638416, 65536, 3, 1703952, 65536, 3, 1769488, 65536, 3, 1835024, 65536, 3, 1900560, 65536, 3, 1966096, 65536, 3, 1572881, 65536, 3, 1638417, 65536, 3, 1703953, 65536, 3, 1769489, 65536, 3, 1835025, 65536, 3, 1900561, 65536, 3, 1966097, 65536, 3, 1572882, 65536, 3, 1638418, 65536, 3, 1703954, 65536, 3, 1769490, 65536, 3, 1835026, 65536, 3, 1900562, 65536, 3, 1966098, 65536, 3, 1572883, 65536, 3, 1638419, 65536, 3, 1703955, 65536, 3, 1769491, 65536, 3, 1835027, 65536, 3, 1900563, 65536, 3, 1966099, 65536, 3, 1572884, 65536, 3, 1638420, 65536, 3, 1703956, 65536, 3, 1769492, 65536, 3, 1835028, 65536, 3, 1900564, 65536, 3, 1966100, 65536, 3, 1572885, 65536, 3, 1638421, 65536, 3, 1703957, 65536, 3, 1769493, 65536, 3, 1835029, 65536, 3, 1900565, 65536, 3, 1966101, 65536, 3, 1572886, 65536, 3, 1638422, 65536, 3, 1703958, 65536, 3, 1769494, 65536, 3, 1835030, 65536, 3, 1900566, 65536, 3, 1966102, 65536, 3, 1572887, 65536, 3, 1638423, 65536, 3, 1703959, 65536, 3, 1769495, 65536, 3, 1835031, 65536, 3, 1900567, 65536, 3, 1966103, 65536, 3, 1572888, 65536, 3, 1638424, 65536, 3, 1703960, 65536, 3, 1769496, 65536, 3, 1835032, 65536, 3, 1900568, 65536, 3, 1966104, 65536, 3, 1572889, 65536, 3, 1638425, 65536, 3, 1703961, 65536, 3, 1769497, 65536, 3, 1835033, 65536, 3, 1900569, 65536, 3, 1966105, 65536, 3, 1572890, 65536, 3, 1638426, 65536, 3, 1703962, 65536, 3, 1769498, 65536, 3, 1835034, 65536, 3, 1900570, 65536, 3, 1966106, 65536, 3, 1572891, 65536, 3, 1638427, 65536, 3, 1703963, 65536, 3, 1769499, 65536, 3, 1835035, 65536, 3, 1900571, 65536, 3, 1966107, 65536, 3, 1572892, 65536, 3, 1638428, 65536, 3, 1703964, 65536, 3, 1769500, 65536, 3, 1835036, 65536, 3, 1900572, 65536, 3, 1966108, 65536, 3, 1572893, 65536, 3, 1638429, 65536, 3, 1703965, 65536, 3, 1769501, 65536, 3, 1835037, 65536, 3, 1900573, 65536, 3, 1966109, 65536, 3, 1572894, 65536, 3, 1638430, 65536, 3, 1703966, 65536, 3, 1769502, 65536, 3, 1835038, 65536, 3, 1900574, 65536, 3, 1966110, 65536, 3, 1572895, 65536, 3, 1638431, 65536, 3, 1703967, 65536, 3, 1769503, 65536, 3, 1835039, 65536, 3, 1900575, 65536, 3, 1966111, 65536, 3, 1572896, 65536, 3, 1638432, 65536, 3, 1703968, 65536, 3, 1769504, 65536, 3, 1835040, 65536, 3, 1900576, 65536, 3, 1966112, 65536, 3, 1572897, 65536, 3, 1638433, 65536, 3, 1703969, 65536, 3, 1769505, 65536, 3, 1835041, 65536, 3, 1900577, 65536, 3, 1966113, 65536, 3, 1572898, 65536, 3, 1638434, 65536, 3, 1703970, 65536, 3, 1769506, 65536, 3, 1835042, 65536, 3, 1900578, 65536, 3, 1966114, 65536, 3, 1572899, 65536, 3, 1638435, 65536, 3, 1703971, 65536, 3, 1769507, 65536, 3, 1835043, 65536, 3, 1900579, 65536, 3, 1966115, 65536, 3, 1572900, 65536, 3, 1638436, 65536, 3, 1703972, 65536, 3, 1769508, 65536, 3, 1835044, 65536, 3, 1900580, 65536, 3, 1966116, 65536, 3, 1572901, 65536, 3, 1638437, 65536, 3, 1703973, 65536, 3, 1769509, 65536, 3, 1835045, 65536, 3, 1900581, 65536, 3, 1966117, 65536, 3, 1572902, 65536, 3, 1638438, 65536, 3, 1703974, 65536, 3, 1769510, 65536, 3, 1835046, 65536, 3, 1900582, 65536, 3, 1966118, 65536, 3, 1572903, 65536, 3, 1638439, 65536, 3, 1703975, 65536, 3, 1769511, 65536, 3, 1835047, 65536, 3, 1900583, 65536, 3, 1966119, 65536, 3, 1572904, 65536, 3, 1638440, 65536, 3, 1703976, 65536, 3, 1769512, 65536, 3, 1835048, 65536, 3, 1900584, 65536, 3, 1966120, 65536, 3, 1572905, 65536, 3, 1638441, 65536, 3, 1703977, 65536, 3, 1769513, 65536, 3, 1835049, 65536, 3, 1900585, 65536, 3, 1966121, 65536, 3, 1572906, 65536, 3, 1638442, 65536, 3, 1703978, 65536, 3, 1769514, 65536, 3, 1835050, 65536, 3, 1900586, 65536, 3, 1966122, 65536, 3, 1572907, 65536, 3, 1638443, 65536, 3, 1703979, 65536, 3, 1769515, 65536, 3, 1835051, 65536, 3, 1900587, 65536, 3, 1966123, 65536, 3, 1572908, 65536, 3, 1638444, 65536, 3, 1703980, 65536, 3, 1769516, 65536, 3, 1835052, 65536, 3, 1900588, 65536, 3, 1966124, 65536, 3, 1572909, 65536, 3, 1638445, 65536, 3, 1703981, 65536, 3, 1769517, 65536, 3, 1835053, 65536, 3, 1900589, 65536, 3, 1966125, 65536, 3, 1572910, 65536, 3, 1638446, 65536, 3, 1703982, 65536, 3, 1769518, 65536, 3, 1835054, 65536, 3, 1900590, 65536, 3, 1966126, 65536, 3, 1572911, 65536, 3, 1638447, 65536, 3, 1703983, 65536, 3, 1769519, 65536, 3, 1835055, 65536, 3, 1900591, 65536, 3, 1966127, 65536, 3, 1572912, 65536, 3, 1638448, 65536, 3, 1703984, 65536, 3, 1769520, 65536, 3, 1835056, 65536, 3, 1900592, 65536, 3, 1966128, 65536, 3, 1572913, 65536, 3, 1638449, 65536, 3, 1703985, 65536, 3, 1769521, 65536, 3, 1835057, 65536, 3, 1900593, 65536, 3, 1966129, 65536, 3, 1572914, 65536, 3, 1638450, 65536, 3, 1703986, 65536, 3, 1769522, 65536, 3, 1835058, 65536, 3, 1900594, 65536, 3, 1966130, 65536, 3, 1572915, 65536, 3, 1638451, 65536, 3, 1703987, 65536, 3, 1769523, 65536, 3, 1835059, 65536, 3, 1900595, 65536, 3, 1966131, 65536, 3, 1572916, 65536, 3, 1638452, 65536, 3, 1703988, 65536, 3, 1769524, 65536, 3, 1835060, 65536, 3, 1900596, 65536, 3, 1966132, 65536, 3, 1572917, 65536, 3, 1638453, 65536, 3, 1703989, 65536, 3, 1769525, 65536, 3, 1835061, 65536, 3, 1900597, 65536, 3, 1966133, 65536, 3, 1572918, 65536, 3, 1638454, 65536, 3, 1703990, 65536, 3, 1769526, 65536, 3, 1835062, 65536, 3, 1900598, 65536, 3, 1966134, 65536, 3, 1572919, 65536, 3, 1638455, 65536, 3, 1703991, 65536, 3, 1769527, 65536, 3, 1835063, 65536, 3, 1900599, 65536, 3, 1966135, 65536, 3, 1507339, 65536, 1, 1507340, 65536, 1, 1507341, 65536, 1, 1507342, 65536, 1, 1507343, 65536, 1, 1507344, 65536, 1, 1507345, 65536, 1, 1507346, 65536, 1, 1507347, 65536, 1, 1507348, 65536, 1, 1507349, 65536, 1, 1507350, 65536, 1, 1507351, 65536, 1, 1507352, 65536, 1, 1507353, 65536, 1, 1507354, 65536, 1, 1507355, 65536, 1, 1507356, 65536, 1, 1507357, 65536, 1, 1507358, 65536, 1, 1507359, 65536, 1, 1507360, 65536, 1, 1507361, 65536, 1, 1507362, 65536, 1, 1507363, 65536, 1, 1507364, 65536, 1, 1507365, 65536, 1, 1507366, 65536, 1, 1507367, 65536, 1, 1507368, 65536, 1, 1507369, 65536, 1, 1507370, 65536, 1, 1507371, 65536, 1, 1507372, 65536, 1, 1507373, 65536, 1, 1507374, 65536, 1, 1507375, 65536, 1, 1507376, 65536, 1, 1507377, 65536, 1, 1507378, 65536, 1, 1507379, 65536, 1, 1507380, 65536, 1, 1507382, 65536, 1, 1507383, 65536, 1, 1179659, 983040, 9, 1245195, 983040, 9, 1310731, 983040, 9, 1376267, 983040, 9, 1441803, 983040, 9, 1179660, 983040, 9, 1245196, 983040, 9, 1310732, 983040, 9, 1376268, 983040, 9, 1441804, 983040, 9, 1179661, 983040, 9, 1245197, 983040, 9, 1310733, 983040, 9, 1376269, 983040, 9, 1441805, 983040, 9, 1179662, 983040, 9, 1245198, 983040, 9, 1310734, 983040, 9, 1376270, 983040, 9, 1441806, 983040, 9, 1179663, 983040, 9, 1245199, 983040, 9, 1310735, 983040, 9, 1376271, 983040, 9, 1441807, 983040, 9, 1507384, 65536, 1, 1507385, 65536, 1, 1507386, 65536, 1, 1507387, 65536, 1, 1507388, 65536, 1, 1507389, 65536, 1, 1507390, 65536, 1, 1507391, 65536, 1, 1507392, 65536, 1, 1507393, 65536, 1, 1507394, 65536, 1, 1507395, 65536, 1, 1507396, 65536, 1, 1507397, 65536, 1, 1507398, 65536, 1, 1507399, 65536, 1, 1507400, 65536, 1, 1507401, 65536, 1, 1507402, 65536, 1, 1507403, 65536, 1, 1507404, 65536, 1, 1507405, 65536, 1, 1507406, 65536, 1, 1507407, 65536, 1, 1507408, 65536, 1, 1507409, 65536, 1, 1507410, 65536, 1, 1507411, 65536, 1, 1507412, 65536, 1, 1507413, 65536, 1, 1507414, 65536, 1, 1507415, 65536, 1, 1507416, 65536, 1, 1507417, 65536, 1, 1507418, 65536, 1, 1507419, 65536, 1, 1507420, 65536, 1, 1507421, 65536, 1, 1507422, 65536, 1, 1507423, 65536, 1, 1507424, 65536, 1, 1572920, 65536, 3, 1638456, 65536, 3, 1703992, 65536, 3, 1769528, 65536, 3, 1835064, 65536, 3, 1900600, 65536, 3, 1966136, 65536, 3, 1572921, 65536, 3, 1638457, 65536, 3, 1703993, 65536, 3, 1769529, 65536, 3, 1835065, 65536, 3, 1900601, 65536, 3, 1966137, 65536, 3, 1572922, 65536, 3, 1638458, 65536, 3, 1703994, 65536, 3, 1769530, 65536, 3, 1835066, 65536, 3, 1900602, 65536, 3, 1966138, 65536, 3, 1572923, 65536, 3, 1638459, 65536, 3, 1703995, 65536, 3, 1769531, 65536, 3, 1835067, 65536, 3, 1900603, 65536, 3, 1966139, 65536, 3, 1572924, 65536, 3, 1638460, 65536, 3, 1703996, 65536, 3, 1769532, 65536, 3, 1835068, 65536, 3, 1900604, 65536, 3, 1966140, 65536, 3, 1572925, 65536, 3, 1638461, 65536, 3, 1703997, 65536, 3, 1769533, 65536, 3, 1835069, 65536, 3, 1900605, 65536, 3, 1966141, 65536, 3, 1572926, 65536, 3, 1638462, 65536, 3, 1703998, 65536, 3, 1769534, 65536, 3, 1835070, 65536, 3, 1900606, 65536, 3, 1966142, 65536, 3, 1572927, 65536, 3, 1638463, 65536, 3, 1703999, 65536, 3, 1769535, 65536, 3, 1835071, 65536, 3, 1900607, 65536, 3, 1966143, 65536, 3, 1572928, 65536, 3, 1638464, 65536, 3, 1704000, 65536, 3, 1769536, 65536, 3, 1835072, 65536, 3, 1900608, 65536, 3, 1966144, 65536, 3, 1572929, 65536, 3, 1638465, 65536, 3, 1704001, 65536, 3, 1769537, 65536, 3, 1835073, 65536, 3, 1900609, 65536, 3, 1966145, 65536, 3, 1572930, 65536, 3, 1638466, 65536, 3, 1704002, 65536, 3, 1769538, 65536, 3, 1835074, 65536, 3, 1900610, 65536, 3, 1966146, 65536, 3, 1572931, 65536, 3, 1638467, 65536, 3, 1704003, 65536, 3, 1769539, 65536, 3, 1835075, 65536, 3, 1900611, 65536, 3, 1966147, 65536, 3, 1572932, 65536, 3, 1638468, 65536, 3, 1704004, 65536, 3, 1769540, 65536, 3, 1835076, 65536, 3, 1900612, 65536, 3, 1966148, 65536, 3, 1572933, 65536, 3, 1638469, 65536, 3, 1704005, 65536, 3, 1769541, 65536, 3, 1835077, 65536, 3, 1900613, 65536, 3, 1966149, 65536, 3, 1572934, 65536, 3, 1638470, 65536, 3, 1704006, 65536, 3, 1769542, 65536, 3, 1835078, 65536, 3, 1900614, 65536, 3, 1966150, 65536, 3, 1572935, 65536, 3, 1638471, 65536, 3, 1704007, 65536, 3, 1769543, 65536, 3, 1835079, 65536, 3, 1900615, 65536, 3, 1966151, 65536, 3, 1572936, 65536, 3, 1638472, 65536, 3, 1704008, 65536, 3, 1769544, 65536, 3, 1835080, 65536, 3, 1900616, 65536, 3, 1966152, 65536, 3, 1572937, 65536, 3, 1638473, 65536, 3, 1704009, 65536, 3, 1769545, 65536, 3, 1835081, 65536, 3, 1900617, 65536, 3, 1966153, 65536, 3, 1572938, 65536, 3, 1638474, 65536, 3, 1704010, 65536, 3, 1769546, 65536, 3, 1835082, 65536, 3, 1900618, 65536, 3, 1966154, 65536, 3, 1572939, 65536, 3, 1638475, 65536, 3, 1704011, 65536, 3, 1769547, 65536, 3, 1835083, 65536, 3, 1900619, 65536, 3, 1966155, 65536, 3, 1572940, 65536, 3, 1638476, 65536, 3, 1704012, 65536, 3, 1769548, 65536, 3, 1835084, 65536, 3, 1900620, 65536, 3, 1966156, 65536, 3, 1572941, 65536, 3, 1638477, 65536, 3, 1704013, 65536, 3, 1769549, 65536, 3, 1835085, 65536, 3, 1900621, 65536, 3, 1966157, 65536, 3, 1572942, 65536, 3, 1638478, 65536, 3, 1704014, 65536, 3, 1769550, 65536, 3, 1835086, 65536, 3, 1900622, 65536, 3, 1966158, 65536, 3, 1572943, 65536, 3, 1638479, 65536, 3, 1704015, 65536, 3, 1769551, 65536, 3, 1835087, 65536, 3, 1900623, 65536, 3, 1966159, 65536, 3, 1572944, 65536, 3, 1638480, 65536, 3, 1704016, 65536, 3, 1769552, 65536, 3, 1835088, 65536, 3, 1900624, 65536, 3, 1966160, 65536, 3, 1572945, 65536, 3, 1638481, 65536, 3, 1704017, 65536, 3, 1769553, 65536, 3, 1835089, 65536, 3, 1900625, 65536, 3, 1966161, 65536, 3, 1572946, 65536, 3, 1638482, 65536, 3, 1704018, 65536, 3, 1769554, 65536, 3, 1835090, 65536, 3, 1900626, 65536, 3, 1966162, 65536, 3, 1572947, 65536, 3, 1638483, 65536, 3, 1704019, 65536, 3, 1769555, 65536, 3, 1835091, 65536, 3, 1900627, 65536, 3, 1966163, 65536, 3, 1572948, 65536, 3, 1638484, 65536, 3, 1704020, 65536, 3, 1769556, 65536, 3, 1835092, 65536, 3, 1900628, 65536, 3, 1966164, 65536, 3, 1572949, 65536, 3, 1638485, 65536, 3, 1704021, 65536, 3, 1769557, 65536, 3, 1835093, 65536, 3, 1900629, 65536, 3, 1966165, 65536, 3, 1572950, 65536, 3, 1638486, 65536, 3, 1704022, 65536, 3, 1769558, 65536, 3, 1835094, 65536, 3, 1900630, 65536, 3, 1966166, 65536, 3, 1572951, 65536, 3, 1638487, 65536, 3, 1704023, 65536, 3, 1769559, 65536, 3, 1835095, 65536, 3, 1900631, 65536, 3, 1966167, 65536, 3, 1572952, 65536, 3, 1638488, 65536, 3, 1704024, 65536, 3, 1769560, 65536, 3, 1835096, 65536, 3, 1900632, 65536, 3, 1966168, 65536, 3, 1572953, 65536, 3, 1638489, 65536, 3, 1704025, 65536, 3, 1769561, 65536, 3, 1835097, 65536, 3, 1900633, 65536, 3, 1966169, 65536, 3, 1572954, 65536, 3, 1638490, 65536, 3, 1704026, 65536, 3, 1769562, 65536, 3, 1835098, 65536, 3, 1900634, 65536, 3, 1966170, 65536, 3, 1572955, 65536, 3, 1638491, 65536, 3, 1704027, 65536, 3, 1769563, 65536, 3, 1835099, 65536, 3, 1900635, 65536, 3, 1966171, 65536, 3, 1572956, 65536, 3, 1638492, 65536, 3, 1704028, 65536, 3, 1769564, 65536, 3, 1835100, 65536, 3, 1900636, 65536, 3, 1966172, 65536, 3, 1572957, 65536, 3, 1638493, 65536, 3, 1704029, 65536, 3, 1769565, 65536, 3, 1835101, 65536, 3, 1900637, 65536, 3, 1966173, 65536, 3, 1572958, 65536, 3, 1638494, 65536, 3, 1704030, 65536, 3, 1769566, 65536, 3, 1835102, 65536, 3, 1900638, 65536, 3, 1966174, 65536, 3, 1572959, 65536, 3, 1638495, 65536, 3, 1704031, 65536, 3, 1769567, 65536, 3, 1835103, 65536, 3, 1900639, 65536, 3, 1966175, 65536, 3, 1572960, 65536, 3, 1638496, 65536, 3, 1704032, 65536, 3, 1769568, 65536, 3, 1835104, 65536, 3, 1900640, 65536, 3, 1966176, 65536, 3)

[node name="BG" type="ParallaxBackground" parent="."]
script = ExtResource("2_thxk0")

[node name="ParallaxLayer" type="ParallaxLayer" parent="BG"]
motion_mirroring = Vector2(1088, 0)

[node name="Back" type="Sprite2D" parent="BG/ParallaxLayer"]
position = Vector2(575.25, 324.75)
scale = Vector2(3.00391, 2.69375)
texture = ExtResource("3_8bsp1")
metadata/_edit_lock_ = true

[node name="Player" type="Node2D" parent="."]

[node name="Player" parent="Player" instance=ExtResource("1_kqxt0")]
position = Vector2(534, 287)

[node name="Mobs" type="Node2D" parent="."]

[node name="Frog" parent="Mobs" instance=ExtResource("5_0wnwe")]
position = Vector2(1040, 344)

[node name="Frog2" parent="Mobs" instance=ExtResource("5_0wnwe")]
position = Vector2(1080, 288)

[node name="Frog3" parent="Mobs" instance=ExtResource("5_0wnwe")]
position = Vector2(1080, 328)

[node name="Frog4" parent="Mobs" instance=ExtResource("5_0wnwe")]
position = Vector2(968, 328)

[node name="Frog5" parent="Mobs" instance=ExtResource("5_0wnwe")]
position = Vector2(1000, 328)

[node name="UI" type="CanvasLayer" parent="."]

[node name="HP" type="Label" parent="UI"]
offset_left = 8.0
offset_top = 8.0
offset_right = 168.0
offset_bottom = 61.0
theme_override_colors/font_color = Color(0, 0, 0, 1)
theme_override_font_sizes/font_size = 36
text = "HP"
script = ExtResource("6_ryyor")

[node name="Gold" type="Label" parent="UI"]
offset_left = 176.0
offset_top = 8.0
offset_right = 336.0
offset_bottom = 61.0
theme_override_colors/font_color = Color(0, 0, 0, 1)
theme_override_font_sizes/font_size = 36
text = "Gold"
script = ExtResource("7_c5osq")

[node name="Collectables" type="Node2D" parent="."]
script = SubResource("GDScript_r2dne")

[node name="Timer" type="Timer" parent="Collectables"]
autostart = true

[connection signal="timeout" from="Collectables/Timer" to="Collectables" method="_on_timer_timeout"]
